$date
	Sun Oct 20 16:43:46 2013
$end

$version
	Synopsys VCS version H-2013.06
$end

$timescale
	1s
$end

$comment Csum: 1 d5b22ce215502c01 $end


$scope module tb_mcu $end
$var reg 1 ! tb_rst $end
$var reg 1 " tb_clk $end
$var wire 8 # tb_opcode [7:0] $end
$var wire 1 $ tb_psr [2] $end
$var wire 1 % tb_psr [1] $end
$var wire 1 & tb_psr [0] $end
$var wire 1 ' tb_psr_update $end
$var wire 1 ( tb_opcode_update $end
$var wire 1 ) tb_acc_update $end
$var wire 1 * tb_imm_update $end
$var wire 1 + tb_alu_operation [3] $end
$var wire 1 , tb_alu_operation [2] $end
$var wire 1 - tb_alu_operation [1] $end
$var wire 1 . tb_alu_operation [0] $end
$var wire 1 / tb_pc_count $end
$var wire 1 0 tb_pc_load $end
$var wire 1 1 tb_ram_write $end
$var reg 8 2 tb_alu [7:0] $end
$var reg 3 3 tb_apsr [2:0] $end
$var reg 8 4 tb_imem_data [7:0] $end
$var reg 1 5 tb_dmem_data [7] $end
$var reg 1 6 tb_dmem_data [6] $end
$var reg 1 7 tb_dmem_data [5] $end
$var reg 1 8 tb_dmem_data [4] $end
$var reg 1 9 tb_dmem_data [3] $end
$var reg 1 : tb_dmem_data [2] $end
$var reg 1 ; tb_dmem_data [1] $end
$var reg 1 < tb_dmem_data [0] $end

$scope module mcu $end
$var wire 1 ! rst $end
$var wire 1 " clk $end
$var wire 8 # opcode [7:0] $end
$var wire 1 $ psr [2] $end
$var wire 1 % psr [1] $end
$var wire 1 & psr [0] $end
$var reg 1 = psr_update $end
$var reg 1 > opcode_update $end
$var reg 1 ? acc_update $end
$var reg 1 @ imm_update $end
$var reg 4 A alu_operation [3:0] $end
$var reg 1 B pc_count $end
$var reg 1 C pc_load $end
$var reg 1 D ram_write $end
$var reg 2 E state [1:0] $end
$var reg 2 F next_state [1:0] $end
$upscope $end


$scope module regs $end
$var wire 1 ! rst $end
$var wire 1 " clk $end
$var wire 1 ' psr_update $end
$var wire 1 ( opcode_update $end
$var wire 1 ) acc_update $end
$var wire 1 * imm_update $end
$var wire 8 2 alu [7:0] $end
$var wire 3 3 apsr [2:0] $end
$var wire 8 4 imem_data [7:0] $end
$var wire 1 5 dmem_data [7] $end
$var wire 1 6 dmem_data [6] $end
$var wire 1 7 dmem_data [5] $end
$var wire 1 8 dmem_data [4] $end
$var wire 1 9 dmem_data [3] $end
$var wire 1 : dmem_data [2] $end
$var wire 1 ; dmem_data [1] $end
$var wire 1 < dmem_data [0] $end
$var reg 8 G opcode [7:0] $end
$var reg 3 H psr [2:0] $end
$var reg 8 I acc [7:0] $end
$var reg 8 J imm [7:0] $end
$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
0?
0@
1>
1B
0C
0=
0D
0)
1.
1-
1,
1+
0"
x<
x;
x:
x9
x8
x7
x6
x5
0*
1(
1/
00
0'
0&
0%
0$
01
1!
b00000000 I
b1111 A
b00000000 J
b00 F
b00000000 G
b000 H
b11 E
bxxxxxxxx 2
bxxx 3
b00000000 4
b00000000 #
$end
#5
1"
#10
0"
0!
#15
1"
b00 E
b01 F
0>
0(
0B
0/
1@
1*
#20
0"
b10101110 4
#25
1"
b01 E
b10101110 J
b10 F
1?
1)
1=
1'
1B
1/
0@
0*
#30
0"
#35
1"
b10 E
bxxx H
x$
x%
x&
bxxxxxxxx I
b00 F
0?
0)
1>
1(
0=
0'
#40
0"
b01000000 4
#45
1"
b00 E
b01000000 G
b01000000 #
b01 F
0>
0(
0B
0/
1@
1*
#50
0"
b10101110 4
#55
1"
b01 E
b10 F
1?
1)
1=
1'
1B
1/
0@
0*
b0000 A
0+
0,
0-
0.
#60
0"
#65
1"
b10 E
b00 F
0?
0)
b1111 A
1+
1,
1-
1.
1>
1(
0=
0'
#70
0"
b01000001 4
#75
1"
b00 E
b01000001 G
b01000001 #
b01 F
0>
0(
0B
0/
1@
1*
#80
0"
b10101110 4
#85
1"
b01 E
b10 F
1?
1)
1=
1'
1B
1/
0@
0*
b0001 A
0+
0,
0-
#90
0"
#95
1"
b10 E
b00 F
0?
0)
b1111 A
1+
1,
1-
1>
1(
0=
0'
#100
0"
b00000010 4
#105
1"
b00 E
b00000010 G
b00000010 #
b01 F
0>
0(
0B
0/
1@
1*
#110
0"
b10101110 4
#115
1"
b01 E
b10 F
1?
1)
1=
1'
1B
1/
0@
0*
1D
11
#120
0"
#125
1"
b10 E
b00 F
0?
0)
1>
1(
0=
0'
0D
01
#130
0"
