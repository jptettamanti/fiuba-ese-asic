$date
	Mon Oct 21 01:25:58 2013
$end

$version
	Synopsys VCS version H-2013.06
$end

$timescale
	1s
$end

$comment Csum: 1 4d605614d6043e9f $end


$scope module tb_cpu $end
$var reg 1 ! tb_rst $end
$var reg 1 " tb_clk $end
$var wire 1 # tb_psr_update $end
$var wire 1 $ tb_psr [2] $end
$var wire 1 % tb_psr [1] $end
$var wire 1 & tb_psr [0] $end
$var wire 3 ' tb_apsr [2:0] $end
$var wire 8 ( tb_opcode [7:0] $end
$var wire 1 ) tb_opcode_update $end
$var wire 1 * tb_acc_update $end
$var wire 1 + tb_imm_update $end
$var wire 1 , tb_ram_write $end
$var wire 1 - tb_dmem_data_r [7] $end
$var wire 1 . tb_dmem_data_r [6] $end
$var wire 1 / tb_dmem_data_r [5] $end
$var wire 1 0 tb_dmem_data_r [4] $end
$var wire 1 1 tb_dmem_data_r [3] $end
$var wire 1 2 tb_dmem_data_r [2] $end
$var wire 1 3 tb_dmem_data_r [1] $end
$var wire 1 4 tb_dmem_data_r [0] $end
$var wire 8 5 tb_dmem_data_w [7:0] $end
$var wire 8 5 tb_dmem_addr_reg [7:0] $end
$var wire 1 6 tb_pc_count $end
$var wire 1 7 tb_pc_load $end
$var reg 8 8 tb_addr_in [7:0] $end
$var reg 8 9 tb_imem_data [7:0] $end
$var wire 1 : tb_imem_addr [7] $end
$var wire 1 ; tb_imem_addr [6] $end
$var wire 1 < tb_imem_addr [5] $end
$var wire 1 = tb_imem_addr [4] $end
$var wire 1 > tb_imem_addr [3] $end
$var wire 1 ? tb_imem_addr [2] $end
$var wire 1 @ tb_imem_addr [1] $end
$var wire 1 A tb_imem_addr [0] $end
$var wire 4 B tb_alu_operation [3:0] $end
$var wire 8 C tb_alu [7:0] $end
$var wire 8 5 tb_opa [7:0] $end
$var wire 8 D tb_opb [7:0] $end

$scope module mcu $end
$var wire 1 ! rst $end
$var wire 1 " clk $end
$var wire 8 ( opcode [7:0] $end
$var wire 1 $ psr [2] $end
$var wire 1 % psr [1] $end
$var wire 1 & psr [0] $end
$var reg 1 E psr_update $end
$var reg 1 F opcode_update $end
$var reg 1 G acc_update $end
$var reg 1 H imm_update $end
$var reg 4 I alu_operation [3:0] $end
$var reg 1 J pc_count $end
$var reg 1 K pc_load $end
$var reg 1 L ram_write $end
$var reg 2 M state [1:0] $end
$var reg 2 N next_state [1:0] $end
$upscope $end


$scope module regs $end
$var wire 1 ! rst $end
$var wire 1 " clk $end
$var wire 8 9 imem_data [7:0] $end
$var wire 1 ) opcode_update $end
$var reg 8 O opcode [7:0] $end
$var wire 1 + imm_update $end
$var wire 1 # psr_update $end
$var wire 3 ' apsr [2:0] $end
$var reg 3 P psr [2:0] $end
$var wire 1 * acc_update $end
$var wire 8 C alu [7:0] $end
$var wire 8 5 opa [7:0] $end
$var wire 8 D opb [7:0] $end
$var wire 1 - dmem_data_r [7] $end
$var wire 1 . dmem_data_r [6] $end
$var wire 1 / dmem_data_r [5] $end
$var wire 1 0 dmem_data_r [4] $end
$var wire 1 1 dmem_data_r [3] $end
$var wire 1 2 dmem_data_r [2] $end
$var wire 1 3 dmem_data_r [1] $end
$var wire 1 4 dmem_data_r [0] $end
$var wire 8 5 dmem_data_w [7:0] $end
$var wire 8 5 dmem_addr_reg [7:0] $end
$var reg 8 Q acc [7:0] $end
$var reg 8 R imm [7:0] $end
$upscope $end


$scope module pc $end
$var wire 1 ! rst $end
$var wire 1 " clk $end
$var wire 1 6 count $end
$var wire 1 7 load $end
$var wire 8 9 addr_in [7:0] $end
$var reg 8 S addr_out [7:0] $end
$upscope $end


$scope module alu $end
$var wire 4 B operation [3:0] $end
$var wire 8 5 a_i [7:0] $end
$var wire 8 D b_i [7:0] $end
$var wire 1 & psr $end
$var reg 8 T result [7:0] $end
$var reg 3 U apsr [2:0] $end
$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
0G
0H
1F
1J
0K
0E
0L
0*
0"
z4
z3
z2
z1
z0
z/
z.
z-
0A
0@
0?
0>
0=
0<
0;
0:
0+
1)
16
07
0#
0&
0%
0$
0,
1!
b00000000 Q
b00000000 S
b1111 I
bxx0 U
b00000000 R
b00 N
b00000000 O
b000 P
b00000000 T
b11 M
bxxxxxxxx 8
b00000000 C
b1111 B
bxx0 '
b00000000 5
b00000000 9
b00000000 D
b00000000 (
$end
#5
1"
#10
0"
0!
#15
1"
b00 M
b00000001 S
1A
b01 N
0F
0)
0J
06
1H
1+
#20
0"
b10101110 9
#25
1"
b01 M
b10101110 R
b10101110 D
b10 N
1J
16
0H
0+
#30
0"
#35
1"
b10 M
b00000010 S
1@
0A
b00 N
1F
1)
#40
0"
b01000000 9
#45
1"
b00 M
b01000000 O
b01000000 (
b00000011 S
1A
b01 N
0F
0)
0J
06
1H
1+
#50
0"
b10101110 9
#55
1"
b01 M
b10 N
1J
16
0H
0+
1G
1*
1E
1#
b0000 I
b0000 B
b10101110 T
b10101110 C
b100 U
b100 '
#60
0"
#65
1"
b10 M
b100 P
1$
b10101110 Q
b10101110 5
b00000100 S
1?
0@
0A
b00 N
0G
0*
b1111 I
b1111 B
1F
1)
0E
0#
bxx0 U
bxx0 '
#70
0"
b01000001 9
#75
1"
b00 M
b01000001 O
b01000001 (
b00000101 S
1A
b01 N
0F
0)
0J
06
1H
1+
#80
0"
b10101110 9
#85
1"
b01 M
b10 N
1J
16
0H
0+
1G
1*
1E
1#
b0001 I
b0001 B
b001 U
b001 '
b00000000 T
b00000000 C
#90
0"
#95
1"
b10 M
b001 P
0$
1&
b00000000 Q
b00000000 5
b00000110 S
1@
0A
b00 N
0G
0*
b1111 I
b1111 B
1F
1)
0E
0#
bxx1 U
bxx1 '
#100
0"
b11000000 9
#105
1"
b00 M
b11000000 O
b11000000 (
b00000111 S
1A
b01 N
0F
0)
0J
06
1H
1+
#110
0"
b10101110 9
#115
1"
b01 M
b10 N
1J
16
0H
0+
1K
17
#120
0"
#125
1"
b10 M
b10101110 S
1:
1<
1>
0A
b00 N
1F
1)
0K
07
#130
0"
b00000010 9
#135
1"
b00 M
b00000010 O
b00000010 (
b10101111 S
1A
b01 N
0F
0)
0J
06
1H
1+
#140
0"
b10101110 9
#145
1"
b01 M
b10 N
1J
16
0H
0+
1L
1,
#150
0"
#155
1"
b10 M
b10110000 S
1=
0>
0?
0@
0A
b00 N
1F
1)
0L
0,
#160
0"
